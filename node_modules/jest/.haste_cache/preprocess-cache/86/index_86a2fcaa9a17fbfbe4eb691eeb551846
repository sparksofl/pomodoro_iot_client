'use strict';
















var validateOpts=require('../lib/declareOpts')({
projectRoots:{
type:'array',
required:true},

blacklistRE:{
type:'object'},

polyfillModuleNames:{
type:'array',
default:[]},

moduleFormat:{
type:'string',
default:'haste'},

assetRoots:{
type:'array',
default:[]},

fileWatcher:{
type:'object',
required:true},

assetExts:{
type:'array',
required:true},

cache:{
type:'object',
required:true},

transformCode:{
type:'function'},

extraNodeModules:{
type:'object',
required:false},

minifyCode:{
type:'function'}});



var getDependenciesValidateOpts=require('../lib/declareOpts')({
dev:{
type:'boolean',
default:true},

platform:{
type:'string',
required:false},

unbundle:{
type:'boolean',
default:false},

recursive:{
type:'boolean',
default:true}});var 



Resolver=function(){

function Resolver(options){babelHelpers.classCallCheck(this,Resolver);
var opts=validateOpts(options);

this._depGraph=new (require('node-haste'))({
activity:require('../Activity'),
roots:opts.projectRoots,
assetRoots_DEPRECATED:opts.assetRoots,
assetExts:opts.assetExts,
ignoreFilePath:function ignoreFilePath(filepath){
return filepath.indexOf('__tests__')!==-1||
opts.blacklistRE&&opts.blacklistRE.test(filepath);},

providesModuleNodeModules:[
'react',
'react-native',




'parse'],

platforms:['ios','android'],
preferNativePlatform:true,
fileWatcher:opts.fileWatcher,
cache:opts.cache,
shouldThrowOnUnresolvedErrors:function shouldThrowOnUnresolvedErrors(_,platform){return platform==='ios';},
transformCode:opts.transformCode,
extraNodeModules:opts.extraNodeModules,
assetDependencies:['react-native/Libraries/Image/AssetRegistry']});


this._minifyCode=opts.minifyCode;
this._polyfillModuleNames=opts.polyfillModuleNames||[];

this._depGraph.load().catch(function(err){
console.error(err.message+'\n'+err.stack);
process.exit(1);});}babelHelpers.createClass(Resolver,[{key:'getShallowDependencies',value:function getShallowDependencies(



entryFile,transformOptions){
return this._depGraph.getShallowDependencies(entryFile,transformOptions);}},{key:'stat',value:function stat(


filePath){
return this._depGraph.getFS().stat(filePath);}},{key:'getModuleForPath',value:function getModuleForPath(


entryFile){
return this._depGraph.getModuleForPath(entryFile);}},{key:'getDependencies',value:function getDependencies(


entryPath,options,transformOptions,onProgress,getModuleId){var _this=this;var _getDependenciesValid=
getDependenciesValidateOpts(options);var platform=_getDependenciesValid.platform;var recursive=_getDependenciesValid.recursive;
return this._depGraph.getDependencies({
entryPath:entryPath,
platform:platform,
transformOptions:transformOptions,
recursive:recursive,
onProgress:onProgress}).
then(function(resolutionResponse){
_this._getPolyfillDependencies().reverse().forEach(
function(polyfill){return resolutionResponse.prependDependency(polyfill);});


resolutionResponse.getModuleId=getModuleId;
return resolutionResponse.finalize();});}},{key:'getModuleSystemDependencies',value:function getModuleSystemDependencies(



options){var _this2=this;
var opts=getDependenciesValidateOpts(options);

var prelude=opts.dev?
require('path').join(__dirname,'polyfills/prelude_dev.js'):
require('path').join(__dirname,'polyfills/prelude.js');

var moduleSystem=require('path').join(__dirname,'polyfills/require.js');

return [
prelude,
moduleSystem].
map(function(moduleName){return _this2._depGraph.createPolyfill({
file:moduleName,
id:moduleName,
dependencies:[]});});}},{key:'_getPolyfillDependencies',value:function _getPolyfillDependencies()



{var _this3=this;
var polyfillModuleNames=[
require('path').join(__dirname,'polyfills/polyfills.js'),
require('path').join(__dirname,'polyfills/console.js'),
require('path').join(__dirname,'polyfills/error-guard.js'),
require('path').join(__dirname,'polyfills/Number.es6.js'),
require('path').join(__dirname,'polyfills/String.prototype.es6.js'),
require('path').join(__dirname,'polyfills/Array.prototype.es6.js'),
require('path').join(__dirname,'polyfills/Array.es6.js'),
require('path').join(__dirname,'polyfills/Object.es7.js'),
require('path').join(__dirname,'polyfills/babelHelpers.js')].
concat(this._polyfillModuleNames);

return polyfillModuleNames.map(
function(polyfillModuleName,idx){return _this3._depGraph.createPolyfill({
file:polyfillModuleName,
id:polyfillModuleName,
dependencies:polyfillModuleNames.slice(0,idx)});});}},{key:'resolveRequires',value:function resolveRequires(




resolutionResponse,module,code){var dependencyOffsets=arguments.length<=3||arguments[3]===undefined?[]:arguments[3];
var resolvedDeps=Object.create(null);



resolutionResponse.getResolvedDependencyPairs(module).
forEach(function(_ref){var _ref2=babelHelpers.slicedToArray(_ref,2);var depName=_ref2[0];var depModule=_ref2[1];
if(depModule){
resolvedDeps[depName]=resolutionResponse.getModuleId(depModule);}});











var replaceModuleId=function replaceModuleId(codeMatch,quote,depName){return (
depName in resolvedDeps?
JSON.stringify(resolvedDeps[depName])+' /* '+depName+' */':
codeMatch);};

code=dependencyOffsets.reduceRight(function(codeBits,offset){
var first=codeBits.shift();
codeBits.unshift(
first.slice(0,offset),
first.slice(offset).replace(/(['"])([^'"']*)\1/,replaceModuleId));

return codeBits;},
[code]);

return code.join('');}},{key:'wrapModule',value:function wrapModule(_ref3)











{var resolutionResponse=_ref3.resolutionResponse;var module=_ref3.module;var name=_ref3.name;var map=_ref3.map;var code=_ref3.code;var _ref3$meta=_ref3.meta;var meta=_ref3$meta===undefined?{}:_ref3$meta;var _ref3$dev=_ref3.dev;var dev=_ref3$dev===undefined?true:_ref3$dev;var _ref3$minify=_ref3.minify;var minify=_ref3$minify===undefined?false:_ref3$minify;
if(module.isJSON()){
code='module.exports = '+code;}


if(module.isPolyfill()){
code=definePolyfillCode(code);}else 
{
var moduleId=resolutionResponse.getModuleId(module);
code=this.resolveRequires(
resolutionResponse,
module,
code,
meta.dependencyOffsets);

code=defineModuleCode(moduleId,code,name,dev);}



return minify?
this._minifyCode(module.path,code,map):
require('promise').resolve({code:code,map:map});}},{key:'minifyModule',value:function minifyModule(_ref4)


{var path=_ref4.path;var code=_ref4.code;var map=_ref4.map;
return this._minifyCode(path,code,map);}},{key:'getDebugInfo',value:function getDebugInfo()


{
return this._depGraph.getDebugInfo();}}]);return Resolver;}();



function defineModuleCode(moduleName,code){var verboseName=arguments.length<=2||arguments[2]===undefined?'':arguments[2];var dev=arguments.length<=3||arguments[3]===undefined?true:arguments[3];
return [
'__d(',
JSON.stringify(moduleName)+' /* '+verboseName+' */, ',
'function(global, require, module, exports) {',
code,
'\n}',
dev?', '+JSON.stringify(verboseName):'',
');'].
join('');}


function definePolyfillCode(code){
return ['(function(global) {',

code,'\n})(typeof global !== \'undefined\' ? global : typeof self !== \'undefined\' ? self : this);'].

join('');}


module.exports=Resolver;