'use strict';















var SOURCEMAPPING_URL='\n\/\/# sourceMappingURL=';var 

Bundle=function(_BundleBase){babelHelpers.inherits(Bundle,_BundleBase);
function Bundle(){var _ref=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];var sourceMapUrl=_ref.sourceMapUrl;var dev=_ref.dev;var minify=_ref.minify;babelHelpers.classCallCheck(this,Bundle);var _this=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(Bundle).call(this));

_this._sourceMap=false;
_this._sourceMapUrl=sourceMapUrl;
_this._shouldCombineSourceMaps=false;
_this._numPrependedModules=0;
_this._numRequireCalls=0;
_this._dev=dev;
_this._minify=minify;

_this._ramBundle=null;return _this;}babelHelpers.createClass(Bundle,[{key:'addModule',value:function addModule(


resolver,resolutionResponse,module,moduleTransport){var _this2=this;
var index=babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'addModule',this).call(this,moduleTransport);
return resolver.wrapModule({
resolutionResponse:resolutionResponse,
module:module,
name:moduleTransport.name,
code:moduleTransport.code,
map:moduleTransport.map,
meta:moduleTransport.meta,
minify:this._minify,
dev:this._dev}).
then(function(_ref2){var code=_ref2.code;var map=_ref2.map;


if(!_this2._shouldCombineSourceMaps&&map!=null){
_this2._shouldCombineSourceMaps=true;}


_this2.replaceModuleAt(
index,new (require('../lib/ModuleTransport'))(babelHelpers.extends({},moduleTransport,{code:code,map:map})));});}},{key:'setNumPrependedModules',value:function setNumPrependedModules(



n){
this._numPrependedModules=n;}},{key:'finalize',value:function finalize(


options){
options=options||{};
if(options.runMainModule){
options.runBeforeMainModule.forEach(this._addRequireCall,this);
this._addRequireCall(babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'getMainModuleId',this).call(this));}


babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'finalize',this).call(this);}},{key:'_addRequireCall',value:function _addRequireCall(


moduleId){
var code=';require('+JSON.stringify(moduleId)+');';
var name='require-'+moduleId;
babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'addModule',this).call(this,new (require('../lib/ModuleTransport'))({
name:name,
id:this._numRequireCalls-1,
code:code,
virtual:true,
sourceCode:code,
sourcePath:name+'.js',
meta:{preloaded:true}}));

this._numRequireCalls+=1;}},{key:'_getInlineSourceMap',value:function _getInlineSourceMap(


dev){
if(this._inlineSourceMap==null){
var sourceMap=this.getSourceMap({excludeSource:true,dev:dev});

var encoded=new Buffer(JSON.stringify(sourceMap)).toString('base64');
this._inlineSourceMap='data:application/json;base64,'+encoded;}

return this._inlineSourceMap;}},{key:'getSource',value:function getSource(


options){
babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'assertFinalized',this).call(this);

options=options||{};

var source=babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'getSource',this).call(this);

if(options.inlineSourceMap){
source+=SOURCEMAPPING_URL+this._getInlineSourceMap(options.dev);}else 
if(this._sourceMapUrl){
source+=SOURCEMAPPING_URL+this._sourceMapUrl;}


return source;}},{key:'getUnbundle',value:function getUnbundle(


type){
this.assertFinalized();
if(!this._ramBundle){
var modules=this.getModules().slice();var _partition=


partition(modules,shouldPreload);var _partition2=babelHelpers.slicedToArray(_partition,2);var startupModules=_partition2[0];var lazyModules=_partition2[1];

this._ramBundle={
startupModules:startupModules,
lazyModules:lazyModules,
allModules:modules};}



return this._ramBundle;}},{key:'_getCombinedSourceMaps',value:function _getCombinedSourceMaps(








options){
var result={
version:3,
file:this._getSourceMapFile(),
sections:[]};


var line=0;
this.getModules().forEach(function(module){
var map=module.map;

if(module.virtual){
map=generateSourceMapForVirtualModule(module);}


if(options.excludeSource){
if(map.sourcesContent&&map.sourcesContent.length){
map=babelHelpers.extends({},map,{sourcesContent:[]});}}



result.sections.push({
offset:{line:line,column:0},
map:map});

line+=module.code.split('\n').length;});


return result;}},{key:'getSourceMap',value:function getSourceMap(


options){
babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'assertFinalized',this).call(this);

if(this._shouldCombineSourceMaps){
return this._getCombinedSourceMaps(options);}


var mappings=this._getMappings();
var modules=this.getModules();
var map={
file:this._getSourceMapFile(),
sources:modules.map(function(module){return module.sourcePath;}),
version:3,
names:[],
mappings:mappings,
sourcesContent:options.excludeSource?
[]:modules.map(function(module){return module.sourceCode;})};

return map;}},{key:'getEtag',value:function getEtag()


{
var eTag=require('crypto').createHash('md5').update(this.getSource()).digest('hex');
return eTag;}},{key:'_getSourceMapFile',value:function _getSourceMapFile()


{
return this._sourceMapUrl?
this._sourceMapUrl.replace('.map','.bundle'):
'bundle.js';}},{key:'_getMappings',value:function _getMappings()


{
var modules=babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'getModules',this).call(this);



var firstLine='AAAA';



var line='AACA';

var moduleLines=Object.create(null);
var mappings='';
for(var i=0;i<modules.length;i++){
var _module=modules[i];
var code=_module.code;
var lastCharNewLine=false;
moduleLines[_module.sourcePath]=0;
for(var t=0;t<code.length;t++){
if(t===0&&i===0){
mappings+=firstLine;}else 
if(t===0){
mappings+='AC';




mappings+=require('./base64-vlq').encode(
0-moduleLines[modules[i-1].sourcePath]);

mappings+='A';}else 
if(lastCharNewLine){
moduleLines[_module.sourcePath]++;
mappings+=line;}

lastCharNewLine=code[t]==='\n';
if(lastCharNewLine){
mappings+=';';}}


if(i!==modules.length-1){
mappings+=';';}}


return mappings;}},{key:'getJSModulePaths',value:function getJSModulePaths()


{
return this.getModules().

filter(function(module){return !module.virtual;}).
map(function(module){return module.sourcePath;});}},{key:'getDebugInfo',value:function getDebugInfo()


{
return [
'<div><h3>Main Module:</h3> '+babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'getMainModuleId',this).call(this)+'</div>',
'<style>',
'pre.collapsed {',
'  height: 10px;',
'  width: 100px;',
'  display: block;',
'  text-overflow: ellipsis;',
'  overflow: hidden;',
'  cursor: pointer;',
'}',
'</style>',
'<h3> Module paths and transformed code: </h3>',
this.getModules().map(function(m){
return '<div> <h4> Path: </h4>'+m.sourcePath+'<br/> <h4> Source: </h4>'+
'<code><pre class="collapsed" onclick="this.classList.remove(\'collapsed\')">'+
require('lodash').escape(m.code)+'</pre></code></div>';}).
join('\n')].
join('\n');}},{key:'toJSON',value:function toJSON()


{
this.assertFinalized('Cannot serialize bundle unless finalized');

return babelHelpers.extends({},babelHelpers.get(Object.getPrototypeOf(Bundle.prototype),'toJSON',this).call(this),{

sourceMapUrl:this._sourceMapUrl,
numPrependedModules:this._numPrependedModules,
numRequireCalls:this._numRequireCalls,
shouldCombineSourceMaps:this._shouldCombineSourceMaps});}}],[{key:'fromJSON',value:function fromJSON(



json){
var bundle=new Bundle({sourceMapUrl:json.sourceMapUrl});

bundle._sourceMapUrl=json.sourceMapUrl;
bundle._numPrependedModules=json.numPrependedModules;
bundle._numRequireCalls=json.numRequireCalls;
bundle._shouldCombineSourceMaps=json.shouldCombineSourceMaps;

require('./BundleBase').fromJSON(bundle,json);

return bundle;}}]);return Bundle;}(require('./BundleBase'));



function generateSourceMapForVirtualModule(module){

var mappings='AAAA;';

for(var i=1;i<module.code.split('\n').length;i++){
mappings+='AACA;';}


return {
version:3,
sources:[module.sourcePath],
names:[],
mappings:mappings,
file:module.sourcePath,
sourcesContent:[module.sourceCode]};}



function shouldPreload(_ref3){var meta=_ref3.meta;
return meta&&meta.preloaded;}


function partition(array,predicate){
var included=[];
var excluded=[];
array.forEach(function(item){return (predicate(item)?included:excluded).push(item);});
return [included,excluded];}


module.exports=Bundle;