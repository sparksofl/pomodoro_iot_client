'use strict';














var Cache=require('node-haste').Cache;









var version=require('../../../../package.json').version;

var sizeOf=require('promise').denodeify(require('image-size'));

var noop=function noop(){};

var validateOpts=require('../lib/declareOpts')({
projectRoots:{
type:'array',
required:true},

blacklistRE:{
type:'object'},

moduleFormat:{
type:'string',
default:'haste'},

polyfillModuleNames:{
type:'array',
default:[]},

cacheVersion:{
type:'string',
default:'1.0'},

resetCache:{
type:'boolean',
default:false},

transformModulePath:{
type:'string',
required:false},

extraNodeModules:{
type:'object',
required:false},

nonPersistent:{
type:'boolean',
default:false},

assetRoots:{
type:'array',
required:false},

assetExts:{
type:'array',
default:['png']},

fileWatcher:{
type:'object',
required:true},

assetServer:{
type:'object',
required:true},

transformTimeoutInterval:{
type:'number',
required:false},

silent:{
type:'boolean',
default:false}});var 



Bundler=function(){

function Bundler(options){var _this=this;babelHelpers.classCallCheck(this,Bundler);
var opts=this._opts=validateOpts(options);

opts.projectRoots.forEach(verifyRootExists);

var mtime=void 0;
try{var _fs$statSync=
require('fs').statSync(opts.transformModulePath);mtime=_fs$statSync.mtime;
mtime=String(mtime.getTime());}
catch(error){
mtime='';}


var cacheKeyParts=[
'react-packager-cache',
version,
opts.cacheVersion,
opts.projectRoots.join(',').split(require('path').sep).join('-'),
mtime];


this._getModuleId=createModuleIdFactory();

if(opts.transformModulePath){
var transformer=require(opts.transformModulePath);
if(typeof transformer.cacheKey!=='undefined'){
cacheKeyParts.push(transformer.cacheKey);}}



this._cache=new Cache({
resetCache:opts.resetCache,
cacheKey:cacheKeyParts.join('$')});


this._transformer=new (require('../JSTransformer'))({
transformModulePath:opts.transformModulePath});


this._resolver=new (require('../Resolver'))({
projectRoots:opts.projectRoots,
blacklistRE:opts.blacklistRE,
polyfillModuleNames:opts.polyfillModuleNames,
moduleFormat:opts.moduleFormat,
assetRoots:opts.assetRoots,
fileWatcher:opts.fileWatcher,
assetExts:opts.assetExts,
cache:this._cache,
transformCode:
function transformCode(module,code,options){return (
_this._transformer.transformFile(module.path,code,options));},
extraNodeModules:opts.extraNodeModules,
minifyCode:this._transformer.minify});


this._projectRoots=opts.projectRoots;
this._assetServer=opts.assetServer;

if(opts.getTransformOptionsModulePath){
this._transformOptionsModule=require(
opts.getTransformOptionsModulePath);}}babelHelpers.createClass(Bundler,[{key:'kill',value:function kill()




{
this._transformer.kill();
return this._cache.end();}},{key:'bundle',value:function bundle(


options){var 
dev=options.dev;var minify=options.minify;var unbundle=options.unbundle;
var moduleSystemDeps=
this._resolver.getModuleSystemDependencies({dev:dev,unbundle:unbundle});
return this._bundle(babelHelpers.extends({},
options,{
bundle:new (require('./Bundle'))({dev:dev,minify:minify,sourceMapUrl:options.sourceMapUrl}),
moduleSystemDeps:moduleSystemDeps}));}},{key:'_sourceHMRURL',value:function _sourceHMRURL(



platform,path){
return this._hmrURL(
'',
platform,
'bundle',
path);}},{key:'_sourceMappingHMRURL',value:function _sourceMappingHMRURL(



platform,path){

return this._hmrURL(
'\/\/# sourceURL=',
platform,
'map',
path);}},{key:'_hmrURL',value:function _hmrURL(



prefix,platform,extensionOverride,filePath){
var matchingRoot=this._projectRoots.find(function(root){return filePath.startsWith(root);});

if(!matchingRoot){
throw new Error('No matching project root for ',filePath);}



if(require('path').sep==='\\'){
filePath=filePath.replace(/\\/g,'/');}


var extensionStart=filePath.lastIndexOf('.');
var resource=filePath.substring(
matchingRoot.length,
extensionStart!==-1?extensionStart:undefined);


return (
prefix+resource+
'.'+extensionOverride+'?'+
'platform='+platform+'&runModule=false&entryModuleOnly=true&hot=true');}},{key:'hmrBundle',value:function hmrBundle(



options,host,port){
return this._bundle(babelHelpers.extends({},
options,{
bundle:new (require('./HMRBundle'))({
sourceURLFn:this._sourceHMRURL.bind(this,options.platform),
sourceMappingURLFn:this._sourceMappingHMRURL.bind(
this,
options.platform)}),


hot:true,
dev:true}));}},{key:'_bundle',value:function _bundle(_ref)

















{var _this2=this;var bundle=_ref.bundle;var entryFile=_ref.entryFile;var runMainModule=_ref.runModule;var runBeforeMainModule=_ref.runBeforeMainModule;var dev=_ref.dev;var minify=_ref.minify;var platform=_ref.platform;var _ref$moduleSystemDeps=_ref.moduleSystemDeps;var moduleSystemDeps=_ref$moduleSystemDeps===undefined?[]:_ref$moduleSystemDeps;var hot=_ref.hot;var unbundle=_ref.unbundle;var entryModuleOnly=_ref.entryModuleOnly;var resolutionResponse=_ref.resolutionResponse;var isolateModuleIDs=_ref.isolateModuleIDs;
var onResolutionResponse=function onResolutionResponse(response){
bundle.setMainModuleId(response.getModuleId(getMainModule(response)));
if(bundle.setNumPrependedModules){
bundle.setNumPrependedModules(
response.numPrependedDependencies+moduleSystemDeps.length);}


if(entryModuleOnly){
response.dependencies=response.dependencies.filter(function(module){return (
module.path.endsWith(entryFile));});}else 

{
response.dependencies=moduleSystemDeps.concat(response.dependencies);}};


var finalizeBundle=function finalizeBundle(_ref2){var bundle=_ref2.bundle;var transformedModules=_ref2.transformedModules;var response=_ref2.response;var modulesByName=_ref2.modulesByName;return (
require('promise').all(
transformedModules.map(function(_ref3){var module=_ref3.module;var transformed=_ref3.transformed;return (
bundle.addModule(_this2._resolver,response,module,transformed));})).

then(function(){
var runBeforeMainModuleIds=Array.isArray(runBeforeMainModule)?
runBeforeMainModule.
map(function(name){return modulesByName[name];}).
filter(Boolean).
map(response.getModuleId):
undefined;

bundle.finalize({
runMainModule:runMainModule,
runBeforeMainModule:runBeforeMainModuleIds});

return bundle;}));};


return this._buildBundle({
entryFile:entryFile,
dev:dev,
minify:minify,
platform:platform,
bundle:bundle,
hot:hot,
unbundle:unbundle,
resolutionResponse:resolutionResponse,
onResolutionResponse:onResolutionResponse,
finalizeBundle:finalizeBundle,
isolateModuleIDs:isolateModuleIDs});}},{key:'prepackBundle',value:function prepackBundle(_ref4)










{var entryFile=_ref4.entryFile;var runMainModule=_ref4.runModule;var runBeforeMainModule=_ref4.runBeforeMainModule;var sourceMapUrl=_ref4.sourceMapUrl;var dev=_ref4.dev;var platform=_ref4.platform;
var onModuleTransformed=function onModuleTransformed(_ref5){var module=_ref5.module;var transformed=_ref5.transformed;var response=_ref5.response;var bundle=_ref5.bundle;
var deps=Object.create(null);
var pairs=response.getResolvedDependencyPairs(module);
if(pairs){
pairs.forEach(function(pair){
deps[pair[0]]=pair[1].path;});}



return module.getName().then(function(name){
bundle.addModule(name,transformed,deps,module.isPolyfill());});};


var finalizeBundle=function finalizeBundle(_ref6){var bundle=_ref6.bundle;var response=_ref6.response;var 
mainModuleId=response.mainModuleId;
bundle.finalize({runBeforeMainModule:runBeforeMainModule,runMainModule:runMainModule,mainModuleId:mainModuleId});
return bundle;};


return this._buildBundle({
entryFile:entryFile,
dev:dev,
platform:platform,
onModuleTransformed:onModuleTransformed,
finalizeBundle:finalizeBundle,
minify:false,
bundle:new (require('./PrepackBundle'))(sourceMapUrl)});}},{key:'_buildBundle',value:function _buildBundle(_ref7)
















{var _this3=this;var entryFile=_ref7.entryFile;var dev=_ref7.dev;var minify=_ref7.minify;var platform=_ref7.platform;var bundle=_ref7.bundle;var hot=_ref7.hot;var unbundle=_ref7.unbundle;var resolutionResponse=_ref7.resolutionResponse;var isolateModuleIDs=_ref7.isolateModuleIDs;var _ref7$onResolutionRes=_ref7.onResolutionResponse;var onResolutionResponse=_ref7$onResolutionRes===undefined?noop:_ref7$onResolutionRes;var _ref7$onModuleTransfo=_ref7.onModuleTransformed;var onModuleTransformed=_ref7$onModuleTransfo===undefined?noop:_ref7$onModuleTransfo;var _ref7$finalizeBundle=_ref7.finalizeBundle;var finalizeBundle=_ref7$finalizeBundle===undefined?noop:_ref7$finalizeBundle;
var findEventId=require('../Activity').startEvent('find dependencies');
var modulesByName=Object.create(null);

if(!resolutionResponse){
var onProgress=noop;
if(process.stdout.isTTY&&!this._opts.silent){(function(){
var bar=new (require('progress'))(
'transformed :current/:total (:percent)',
{complete:'=',incomplete:' ',width:40,total:1});

onProgress=function onProgress(_,total){
bar.total=total;
bar.tick();};})();}



resolutionResponse=this.getDependencies({
entryFile:entryFile,
dev:dev,
platform:platform,
hot:hot,
onProgress:onProgress,
minify:minify,
isolateModuleIDs:isolateModuleIDs,
generateSourceMaps:unbundle});}



return require('promise').resolve(resolutionResponse).then(function(response){
require('../Activity').endEvent(findEventId);
onResolutionResponse(response);


var entryFilePath=void 0;
if(response.dependencies.length>1){
var numModuleSystemDependencies=
_this3._resolver.getModuleSystemDependencies({dev:dev,unbundle:unbundle}).length;


var dependencyIndex=(response.numPrependedDependencies||0)+numModuleSystemDependencies;
if(dependencyIndex in response.dependencies){
entryFilePath=response.dependencies[dependencyIndex].path;}}



var toModuleTransport=function toModuleTransport(module){return (
_this3._toModuleTransport({
module:module,
bundle:bundle,
entryFilePath:entryFilePath,
transformOptions:response.transformOptions,
getModuleId:response.getModuleId}).
then(function(transformed){
modulesByName[transformed.name]=module;
onModuleTransformed({
module:module,
response:response,
bundle:bundle,
transformed:transformed});

return {module:module,transformed:transformed};}));};


return require('promise').all(response.dependencies.map(toModuleTransport)).
then(function(transformedModules){return (
require('promise').resolve(
finalizeBundle({bundle:bundle,transformedModules:transformedModules,response:response,modulesByName:modulesByName})).
then(function(){return bundle;}));});});}},{key:'invalidateFile',value:function invalidateFile(




filePath){
this._cache.invalidate(filePath);}},{key:'getShallowDependencies',value:function getShallowDependencies(_ref8)









{var _this4=this;var entryFile=_ref8.entryFile;var platform=_ref8.platform;var _ref8$dev=_ref8.dev;var dev=_ref8$dev===undefined?true:_ref8$dev;var _ref8$minify=_ref8.minify;var minify=_ref8$minify===undefined?!dev:_ref8$minify;var _ref8$hot=_ref8.hot;var hot=_ref8$hot===undefined?false:_ref8$hot;var _ref8$generateSourceM=_ref8.generateSourceMaps;var generateSourceMaps=_ref8$generateSourceM===undefined?false:_ref8$generateSourceM;
return this.getTransformOptions(
entryFile,
{
dev:dev,
platform:platform,
hot:hot,
generateSourceMaps:generateSourceMaps,
projectRoots:this._projectRoots}).

then(function(transformSpecificOptions){
var transformOptions={
minify:minify,
dev:dev,
platform:platform,
transform:transformSpecificOptions};


return _this4._resolver.getShallowDependencies(entryFile,transformOptions);});}},{key:'stat',value:function stat(



filePath){
return this._resolver.stat(filePath);}},{key:'getModuleForPath',value:function getModuleForPath(


entryFile){
return this._resolver.getModuleForPath(entryFile);}},{key:'getDependencies',value:function getDependencies(_ref9)












{var _this5=this;var entryFile=_ref9.entryFile;var platform=_ref9.platform;var _ref9$dev=_ref9.dev;var dev=_ref9$dev===undefined?true:_ref9$dev;var _ref9$minify=_ref9.minify;var minify=_ref9$minify===undefined?!dev:_ref9$minify;var _ref9$hot=_ref9.hot;var hot=_ref9$hot===undefined?false:_ref9$hot;var _ref9$recursive=_ref9.recursive;var recursive=_ref9$recursive===undefined?true:_ref9$recursive;var _ref9$generateSourceM=_ref9.generateSourceMaps;var generateSourceMaps=_ref9$generateSourceM===undefined?false:_ref9$generateSourceM;var _ref9$isolateModuleID=_ref9.isolateModuleIDs;var isolateModuleIDs=_ref9$isolateModuleID===undefined?false:_ref9$isolateModuleID;var onProgress=_ref9.onProgress;
return this.getTransformOptions(
entryFile,
{
dev:dev,
platform:platform,
hot:hot,
generateSourceMaps:generateSourceMaps,
projectRoots:this._projectRoots}).

then(function(transformSpecificOptions){
var transformOptions={
minify:minify,
dev:dev,
platform:platform,
transform:transformSpecificOptions};


return _this5._resolver.getDependencies(
entryFile,
{dev:dev,platform:platform,recursive:recursive},
transformOptions,
onProgress,
isolateModuleIDs?createModuleIdFactory():_this5._getModuleId);});}},{key:'getOrderedDependencyPaths',value:function getOrderedDependencyPaths(_ref10)




{var _this6=this;var entryFile=_ref10.entryFile;var dev=_ref10.dev;var platform=_ref10.platform;
return this.getDependencies({entryFile:entryFile,dev:dev,platform:platform}).then(
function(_ref11){var dependencies=_ref11.dependencies;
var ret=[];
var promises=[];
var placeHolder={};
dependencies.forEach(function(dep){
if(dep.isAsset()){
var relPath=getPathRelativeToRoot(
_this6._projectRoots,
dep.path);

promises.push(
_this6._assetServer.getAssetData(relPath,platform));

ret.push(placeHolder);}else 
{
ret.push(dep.path);}});



return require('promise').all(promises).then(function(assetsData){
assetsData.forEach(function(_ref12){var files=_ref12.files;
var index=ret.indexOf(placeHolder);
ret.splice.apply(ret,[index,1].concat(babelHelpers.toConsumableArray(files)));});

return ret;});});}},{key:'_toModuleTransport',value:function _toModuleTransport(_ref13)





{var module=_ref13.module;var bundle=_ref13.bundle;var entryFilePath=_ref13.entryFilePath;var transformOptions=_ref13.transformOptions;var getModuleId=_ref13.getModuleId;
var moduleTransport=void 0;
if(module.isAsset_DEPRECATED()){
moduleTransport=
this._generateAssetModule_DEPRECATED(bundle,module,getModuleId);}else 
if(module.isAsset()){
moduleTransport=this._generateAssetModule(
bundle,module,getModuleId,transformOptions.platform);}


if(moduleTransport){
return require('promise').resolve(moduleTransport);}


return require('promise').all([
module.getName(),
module.read(transformOptions)]).
then(function(_ref14)

{var _ref15=babelHelpers.slicedToArray(_ref14,2);var name=_ref15[0];var _ref15$=_ref15[1];var code=_ref15$.code;var dependencies=_ref15$.dependencies;var dependencyOffsets=_ref15$.dependencyOffsets;var map=_ref15$.map;var source=_ref15$.source;var 
preloadedModules=transformOptions.transform.preloadedModules;
var preloaded=
module.path===entryFilePath||
module.isPolyfill()||
preloadedModules&&preloadedModules.hasOwnProperty(module.path);

return new (require('../lib/ModuleTransport'))({
name:name,
id:getModuleId(module),
code:code,
map:map,
meta:{dependencies:dependencies,dependencyOffsets:dependencyOffsets,preloaded:preloaded},
sourceCode:source,
sourcePath:module.path});});}},{key:'getGraphDebugInfo',value:function getGraphDebugInfo()




{
return this._resolver.getDebugInfo();}},{key:'_generateAssetModule_DEPRECATED',value:function _generateAssetModule_DEPRECATED(


bundle,module,getModuleId){
return require('promise').all([
sizeOf(module.path),
module.getName()]).
then(function(_ref16){var _ref17=babelHelpers.slicedToArray(_ref16,2);var dimensions=_ref17[0];var id=_ref17[1];
var img={
__packager_asset:true,
path:module.path,
uri:id.replace(/^[^!]+!/,''),
width:dimensions.width/module.resolution,
height:dimensions.height/module.resolution,
deprecated:true};


bundle.addAsset(img);

var code='module.exports='+JSON.stringify(img)+';';

return new (require('../lib/ModuleTransport'))({
name:id,
id:getModuleId(module),
code:code,
sourceCode:code,
sourcePath:module.path,
virtual:true});});}},{key:'_generateAssetObjAndCode',value:function _generateAssetObjAndCode(




module){var platform=arguments.length<=1||arguments[1]===undefined?null:arguments[1];
var relPath=getPathRelativeToRoot(this._projectRoots,module.path);
var assetUrlPath=require('path').join('/assets',require('path').dirname(relPath));


if(require('path').sep==='\\'){
assetUrlPath=assetUrlPath.replace(/\\/g,'/');}




var isImage=[
'png','jpg','jpeg','bmp','gif','webp','psd','svg','tiff'].
indexOf(require('path').extname(module.path).slice(1))!==-1;

return require('promise').all([
isImage?sizeOf(module.path):null,
this._assetServer.getAssetData(relPath,platform)]).
then(function(res){
var dimensions=res[0];
var assetData=res[1];
var asset={
__packager_asset:true,
fileSystemLocation:require('path').dirname(module.path),
httpServerLocation:assetUrlPath,
width:dimensions?dimensions.width/module.resolution:undefined,
height:dimensions?dimensions.height/module.resolution:undefined,
scales:assetData.scales,
files:assetData.files,
hash:assetData.hash,
name:assetData.name,
type:assetData.type};


var json=JSON.stringify(asset);
var assetRegistryPath='react-native/Libraries/Image/AssetRegistry';
var code='module.exports = require('+
JSON.stringify(assetRegistryPath)+').registerAsset('+json+');';
var dependencies=[assetRegistryPath];
var dependencyOffsets=[code.indexOf(assetRegistryPath)-1];

return {
asset:asset,
code:code,
meta:{dependencies:dependencies,dependencyOffsets:dependencyOffsets}};});}},{key:'_generateAssetModule',value:function _generateAssetModule(





bundle,module,getModuleId){var platform=arguments.length<=3||arguments[3]===undefined?null:arguments[3];
return require('promise').all([
module.getName(),
this._generateAssetObjAndCode(module,platform)]).
then(function(_ref18){var _ref19=babelHelpers.slicedToArray(_ref18,2);var name=_ref19[0];var _ref19$=_ref19[1];var asset=_ref19$.asset;var code=_ref19$.code;var meta=_ref19$.meta;
bundle.addAsset(asset);
return new (require('../lib/ModuleTransport'))({
name:name,
id:getModuleId(module),
code:code,
meta:meta,
sourceCode:code,
sourcePath:module.path,
virtual:true});});}},{key:'getTransformOptions',value:function getTransformOptions(




mainModuleName,options){
var extraOptions=this._transformOptionsModule?
this._transformOptionsModule(mainModuleName,options,this):
null;
return require('promise').resolve(extraOptions).
then(function(extraOptions){return babelHelpers.extends(options,extraOptions);});}}]);return Bundler;}();



function getPathRelativeToRoot(roots,absPath){
for(var i=0;i<roots.length;i++){
var relPath=require('path').relative(roots[i],absPath);
if(relPath[0]!=='.'){
return relPath;}}



throw new Error(
'Expected root module to be relative to one of the project roots');}



function verifyRootExists(root){

require('assert')(require('fs').statSync(root).isDirectory(),'Root has to be a valid directory');}


function createModuleIdFactory(){
var fileToIdMap=Object.create(null);
var nextId=0;
return function(_ref20){var path=_ref20.path;
if(!(path in fileToIdMap)){
fileToIdMap[path]=nextId;
nextId+=1;}

return fileToIdMap[path];};}



function getMainModule(_ref21){var dependencies=_ref21.dependencies;var _ref21$numPrependedDe=_ref21.numPrependedDependencies;var numPrependedDependencies=_ref21$numPrependedDe===undefined?0:_ref21$numPrependedDe;
return dependencies[numPrependedDependencies];}


module.exports=Bundler;