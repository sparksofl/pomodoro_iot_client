'use strict';























var UNSENT=0;
var OPENED=1;
var HEADERS_RECEIVED=2;
var LOADING=3;
var DONE=4;

var SUPPORTED_RESPONSE_TYPES={
arraybuffer:typeof global.ArrayBuffer==='function',
blob:typeof global.Blob==='function',
document:false,
json:true,
text:true,
'':true};


var REQUEST_EVENTS=[
'abort',
'error',
'load',
'loadstart',
'progress',
'timeout',
'loadend'];


var XHR_EVENTS=REQUEST_EVENTS.concat('readystatechange');var 

XMLHttpRequestEventTarget=function(_EventTarget){babelHelpers.inherits(XMLHttpRequestEventTarget,_EventTarget);function XMLHttpRequestEventTarget(){babelHelpers.classCallCheck(this,XMLHttpRequestEventTarget);return babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(XMLHttpRequestEventTarget).apply(this,arguments));}return XMLHttpRequestEventTarget;}(require('event-target-shim').apply(undefined,REQUEST_EVENTS));var 











XMLHttpRequestBase=function(_EventTarget2){babelHelpers.inherits(XMLHttpRequestBase,_EventTarget2);















































function XMLHttpRequestBase(){babelHelpers.classCallCheck(this,XMLHttpRequestBase);var _this2=babelHelpers.possibleConstructorReturn(this,Object.getPrototypeOf(XMLHttpRequestBase).call(this));_this2.UNSENT=UNSENT;_this2.OPENED=OPENED;_this2.HEADERS_RECEIVED=HEADERS_RECEIVED;_this2.LOADING=LOADING;_this2.DONE=DONE;_this2.readyState=UNSENT;_this2.responseText='';_this2.status=0;_this2.timeout=0;_this2.upload=new XMLHttpRequestEventTarget();_this2._aborted=false;_this2._hasError=false;_this2._method=null;_this2._url=null;_this2._timedOut=false;_this2._incrementalEvents=false;

_this2._reset();return _this2;}babelHelpers.createClass(XMLHttpRequestBase,[{key:'_reset',value:function _reset()


{
this.readyState=this.UNSENT;
this.responseHeaders=undefined;
this.responseText='';
this.status=0;
delete this.responseURL;

this._requestId=null;

this._cachedResponse=undefined;
this._hasError=false;
this._headers={};
this._responseType='';
this._sent=false;
this._lowerCaseResponseHeaders={};

this._clearSubscriptions();
this._timedOut=false;}},{key:'didCreateRequest',value:function didCreateRequest(














































































requestId){var _this3=this;
this._requestId=requestId;
this._subscriptions.push(require('RCTDeviceEventEmitter').addListener(
'didSendNetworkData',
function(args){return _this3.__didUploadProgress.apply(_this3,babelHelpers.toConsumableArray(args));}));

this._subscriptions.push(require('RCTDeviceEventEmitter').addListener(
'didReceiveNetworkResponse',
function(args){return _this3._didReceiveResponse.apply(_this3,babelHelpers.toConsumableArray(args));}));

this._subscriptions.push(require('RCTDeviceEventEmitter').addListener(
'didReceiveNetworkData',
function(args){return _this3._didReceiveData.apply(_this3,babelHelpers.toConsumableArray(args));}));

this._subscriptions.push(require('RCTDeviceEventEmitter').addListener(
'didCompleteNetworkResponse',
function(args){return _this3.__didCompleteResponse.apply(_this3,babelHelpers.toConsumableArray(args));}));}},{key:'__didUploadProgress',value:function __didUploadProgress(




requestId,progress,total){
if(requestId===this._requestId){
this.upload.dispatchEvent({
type:'progress',
lengthComputable:true,
loaded:progress,
total:total});}}},{key:'_didReceiveResponse',value:function _didReceiveResponse(




requestId,status,responseHeaders,responseURL){
if(requestId===this._requestId){
this.status=status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);
if(responseURL||responseURL===''){
this.responseURL=responseURL;}else 
{
delete this.responseURL;}}}},{key:'_didReceiveData',value:function _didReceiveData(




requestId,responseText){
if(requestId===this._requestId){
if(!this.responseText){
this.responseText=responseText;}else 
{
this.responseText+=responseText;}

this._cachedResponse=undefined;
this.setReadyState(this.LOADING);}}},{key:'__didCompleteResponse',value:function __didCompleteResponse(




requestId,error,timeOutError){
if(requestId===this._requestId){
if(error){
this.responseText=error;
this._hasError=true;
if(timeOutError){
this._timedOut=true;}}


this._clearSubscriptions();
this._requestId=null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:function _clearSubscriptions()



{
(this._subscriptions||[]).forEach(function(sub){
sub.remove();});

this._subscriptions=[];}},{key:'getAllResponseHeaders',value:function getAllResponseHeaders()


{
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders||{};
return Object.keys(headers).map(function(headerName){
return headerName+': '+headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:function getResponseHeader(


header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value!==undefined?value:null;}},{key:'setRequestHeader',value:function setRequestHeader(


header,value){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()]=value;}},{key:'open',value:function open(


method,url,async){

if(this.readyState!==this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async!==undefined&&!async){

throw new Error('Synchronous http requests are not supported');}

if(!url){
throw new Error('Cannot load an empty url');}

this._reset();
this._method=method.toUpperCase();
this._url=url;
this._aborted=false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:function sendImpl(



method,
url,
headers,
data,
incrementalEvents,
timeout)
{
throw new Error('Subclass must define sendImpl method');}},{key:'send',value:function send(


data){
if(this.readyState!==this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent=true;
var incrementalEvents=this._incrementalEvents||!!this.onreadystatechange;
this.sendImpl(
this._method,
this._url,
this._headers,
data,
incrementalEvents,
this.timeout);}},{key:'abort',value:function abort()



{
this._aborted=true;
if(this._requestId){
require('RCTNetworking').abortRequest(this._requestId);}



if(!(this.readyState===this.UNSENT||
this.readyState===this.OPENED&&!this._sent||
this.readyState===this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'setResponseHeaders',value:function setResponseHeaders(


responseHeaders){
this.responseHeaders=responseHeaders||null;
var headers=responseHeaders||{};
this._lowerCaseResponseHeaders=
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()]=headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:function setReadyState(


newState){
this.readyState=newState;
this.dispatchEvent({type:'readystatechange'});
if(newState===this.DONE&&!this._aborted){
if(this._hasError){
if(this._timedOut){
this.dispatchEvent({type:'timeout'});}else 
{
this.dispatchEvent({type:'error'});}}else 

{
this.dispatchEvent({type:'load'});}}}},{key:'addEventListener',value:function addEventListener(





type,listener){




if(type==='readystatechange'){
this._incrementalEvents=true;}

babelHelpers.get(Object.getPrototypeOf(XMLHttpRequestBase.prototype),'addEventListener',this).call(this,type,listener);}},{key:'responseType',get:function get(){return this._responseType;},set:function set(responseType){if(this.readyState>HEADERS_RECEIVED){throw new Error("Failed to set the 'responseType' property on 'XMLHttpRequest': The "+"response type cannot be set if the object's state is LOADING or DONE");}if(!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)){require('fbjs/lib/warning')('The provided value \''+responseType+'\' is not a valid \'responseType\'.');return;}require('fbjs/lib/invariant')(SUPPORTED_RESPONSE_TYPES[responseType]||responseType==='document','The provided value \''+responseType+'\' is unsupported in this environment.');this._responseType=responseType;}},{key:'response',get:function get(){var responseType=this.responseType;if(responseType===''||responseType==='text'){return this.readyState<LOADING||this._hasError?'':this.responseText;}if(this.readyState!==DONE){return null;}if(this._cachedResponse!==undefined){return this._cachedResponse;}switch(this.responseType){case 'document':this._cachedResponse=null;break;case 'arraybuffer':this._cachedResponse=toArrayBuffer(this.responseText,this.getResponseHeader('content-type')||'');break;case 'blob':this._cachedResponse=new global.Blob([this.responseText],{type:this.getResponseHeader('content-type')||''});break;case 'json':try{this._cachedResponse=JSON.parse(this.responseText);}catch(_){this._cachedResponse=null;}break;default:this._cachedResponse=null;}return this._cachedResponse;}}]);return XMLHttpRequestBase;}(require('event-target-shim').apply(undefined,babelHelpers.toConsumableArray(XHR_EVENTS)));XMLHttpRequestBase.UNSENT=UNSENT;XMLHttpRequestBase.OPENED=OPENED;XMLHttpRequestBase.HEADERS_RECEIVED=HEADERS_RECEIVED;XMLHttpRequestBase.LOADING=LOADING;XMLHttpRequestBase.DONE=DONE;




function toArrayBuffer(text,contentType){var 
length=text.length;
if(length===0){
return new ArrayBuffer(0);}


var charsetMatch=contentType.match(/;\s*charset=([^;]*)/i);
var charset=charsetMatch?charsetMatch[1].trim():'utf-8';

if(/^utf-?8$/i.test(charset)){
return require('utf8').encode(text);}else 
{
var array=new Uint8Array(length);
for(var i=0;i<length;i++){
array[i]=text.charCodeAt(i);}

return array.buffer;}}



module.exports=XMLHttpRequestBase;